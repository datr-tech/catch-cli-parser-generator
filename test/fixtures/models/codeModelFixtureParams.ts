import { DefTypeEnum, OutDirTypeEnum, TemplateTypeEnum } from '@app/config/enums';
import { IFixtureCodeModelParams } from '@test/interfaces/fixtures/models';
import { jsonDefPayloadsFake, writtenCodeExpectedFake } from '@test/doubles/fakes';

export const codeModelFixtureParams: IFixtureCodeModelParams[] = [
	{
		description: 'code.parser.iter',
		defTypeEnum: DefTypeEnum.DEF_TYPE_ITER,
		jsonDefName: 'TestIter',
		jsonPayload: jsonDefPayloadsFake[0],
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_PARSERS,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_CODE_PARSER,
		writtenCodeExpected: writtenCodeExpectedFake[0],
	},
	{
		description: 'code.parser.leaf',
		defTypeEnum: DefTypeEnum.DEF_TYPE_LEAF,
		jsonPayload: jsonDefPayloadsFake[1],
		jsonDefName: 'TestLeaf',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_PARSERS,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_CODE_PARSER,
		writtenCodeExpected: writtenCodeExpectedFake[1],
	},
	{
		description: 'code.parser.stem',
		defTypeEnum: DefTypeEnum.DEF_TYPE_STEM,
		jsonPayload: jsonDefPayloadsFake[2],
		jsonDefName: 'TestStem',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_PARSERS,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_CODE_PARSER,
		writtenCodeExpected: writtenCodeExpectedFake[2],
	},
	{
		description: 'interface.parse.iter',
		defTypeEnum: DefTypeEnum.DEF_TYPE_ITER,
		jsonPayload: jsonDefPayloadsFake[0],
		jsonDefName: 'TestIter',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSE,
		writtenCodeExpected: writtenCodeExpectedFake[3],
	},
	{
		description: 'interface.parse.leaf',
		defTypeEnum: DefTypeEnum.DEF_TYPE_LEAF,
		jsonPayload: jsonDefPayloadsFake[1],
		jsonDefName: 'TestLeaf',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSE,
		writtenCodeExpected: writtenCodeExpectedFake[4],
	},
	{
		description: 'interface.parse.stem',
		defTypeEnum: DefTypeEnum.DEF_TYPE_STEM,
		jsonPayload: jsonDefPayloadsFake[2],
		jsonDefName: 'TestStem',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSE,
		writtenCodeExpected: writtenCodeExpectedFake[5],
	},
	{
		description: 'interface.parse.output.iter',
		defTypeEnum: DefTypeEnum.DEF_TYPE_ITER,
		jsonPayload: jsonDefPayloadsFake[0],
		jsonDefName: 'TestIter',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSE_OUTPUT,
		writtenCodeExpected: writtenCodeExpectedFake[6],
	},
	{
		description: 'interface.parse.output.leaf',
		defTypeEnum: DefTypeEnum.DEF_TYPE_LEAF,
		jsonPayload: jsonDefPayloadsFake[1],
		jsonDefName: 'TestLeaf',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSE_OUTPUT,
		writtenCodeExpected: writtenCodeExpectedFake[7],
	},
	{
		description: 'interface.parse.output.stem',
		defTypeEnum: DefTypeEnum.DEF_TYPE_STEM,
		jsonPayload: jsonDefPayloadsFake[2],
		jsonDefName: 'TestStem',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSE_OUTPUT,
		writtenCodeExpected: writtenCodeExpectedFake[8],
	},
	{
		description: 'interface.parser.iter',
		defTypeEnum: DefTypeEnum.DEF_TYPE_ITER,
		jsonPayload: jsonDefPayloadsFake[0],
		jsonDefName: 'TestIter',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSER,
		writtenCodeExpected: writtenCodeExpectedFake[9],
	},
	{
		description: 'interface.parse.leaf',
		defTypeEnum: DefTypeEnum.DEF_TYPE_LEAF,
		jsonPayload: jsonDefPayloadsFake[1],
		jsonDefName: 'TestLeaf',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSER,
		writtenCodeExpected: writtenCodeExpectedFake[10],
	},
	{
		description: 'interface.parse.stem',
		defTypeEnum: DefTypeEnum.DEF_TYPE_STEM,
		jsonPayload: jsonDefPayloadsFake[2],
		jsonDefName: 'TestStem',
		outDirTypeEnum: OutDirTypeEnum.OUT_DIR_INTERFACES,
		templateTypeEnum: TemplateTypeEnum.TEMPLATE_TYPE_INTERFACE_PARSER,
		writtenCodeExpected: writtenCodeExpectedFake[11],
	},
];
